@use "@/libs/theme/styles/variables" as *;
@use "@/libs/theme/styles/mixins" as *;

.container {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.label {
  display: flex;
  flex-direction: column;
  text-transform: uppercase;
  font-size: 0.75rem;
  line-height: 1.25rem;
  color: var(--color_fg_default);
  letter-spacing: 0.1px;
}

.switch {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 24px;

  & input {
    opacity: 0;
    width: 0;
    height: 0;

    &:focus-visible + .slider {
      outline: solid 1px var(--color_border_focus);
      outline-offset: 0.125rem;
      border-radius: 1.5rem;
      transition: unset;
    }

    &:checked + .slider {
      background-color: var(--color_bg_state_success);
      border: 1px solid var(--color_border_state_success);
    }

    &:checked + .slider:before {
      transform: translateX(1rem);
      background-color: var(--color_fg_on_state_success);
    }
  }
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color_bg_layer);
  border: 1px solid var(--color_border_inverse_static);

  transition: 0.4s;

  &:before {
    position: absolute;
    content: "";
    height: 1rem;
    width: 1rem;
    top: calc((1.5rem - 1rem) / 2 - 1px);
    left: 3px;
    background-color: var(--color_fg_bold);
    transition: 0.4s;
  }
}

.slider.round {
  border-radius: 1.5rem;
}

.slider.round:before {
  border-radius: 50%;
}

.compactLabel {
  @media #{$tablet} {
    display: none;
  }
}

.fullLabel {
  display: none;

  @media #{$tablet} {
    display: unset;
  }
}
