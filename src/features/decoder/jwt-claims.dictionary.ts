export const jwtClaimsDictionary: { [index: string]: string } = {
  alg: `The algorithm used to sign the JWT. [Learn more](https://datatracker.ietf.org/doc/html/rfc7518#section-3.1)`,
  typ: `The media type of this complete JWT. [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-5.1)`,
  cty: `Convey structural information about the JWT. [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-5.2)`,
  iss: `The issuer of the JWT. [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.1)`,
  sub: `The subject of the JWT (the user). [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.2)`,
  aud: `The recipients that the JWT is intended for. [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3)`,
  exp: `The expiration time on or after which the JWT MUST NOT be accepted for processing. [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4)`,
  nbf: `The time before which the JWT MUST NOT be accepted for processing. [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4)`,
  iat: `The time at which the JWT was issued. [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.6)`,
  jti: `The unique identifier for the JWT. [Learn more](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.7)`,
  azp: `The authorized party to which the ID Token was issued. [Learn more](https://openid.net/specs/openid-connect-core-1_0-final.html#IDToken)`,
  jku: `A URI to a set of JSON-encoded public keys. [Learn more](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.2)`,
  jwk: `The public key used to digitally sign the JWS. [Learn more](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.3)`,
  kid: `The key ID is a hint indicating which key was used to secure the JWS. [Learn more](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.4)`,
  x5u: `A URI to the X.509 certificate used to digitally sign the JWS. [Learn more](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.5)`,
  x5t: `X.509 certificate SHA-1 thumbprint for the key used to digitally sign the JWS. [Learn more](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.7)`,
  "x5t#S256": `X.509 certificate SHA-256 thumbprint for the key used to digitally sign the JWS. [Learn more](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.8)`,
  crit: `The extensions that MUST be understood and processed. [Learn more](https://www.rfc-editor.org/rfc/rfc7515.html#section-4.1.11)`,
  enc: `The content encryption algorithm used. [Learn more](https://www.rfc-editor.org/rfc/rfc7516.html#section-4.1.2)`,
  zip: `The compression algorithm applied before encryption, if any. [Learn more](https://www.rfc-editor.org/rfc/rfc7516.html#section-4.1.3)`,
  kty: `The cryptographic algorithm family used with the key. [Learn more](https://www.rfc-editor.org/rfc/rfc7517.html#section-4.1)`,
  use: `The intended use of the public key. [Learn more](https://www.rfc-editor.org/rfc/rfc7517.html#section-4.2)`,
  key_ops: `The operations for which the key is intended to be used. [Learn more](https://www.rfc-editor.org/rfc/rfc7517.html#section-4.3)`,
  sid: `An identifier for a session at the relying party. [Learn more](https://openid.net/specs/openid-connect-frontchannel-1_0.html#OPLogout)`,
  updated_at: `Time the End-User's information was last updated. [Learn more](https://openid.net/specs/openid-connect-core-1_0-final.html#StandardClaims)`,
  at_hash: `Access Token hash value encoded in base64url format. [Learn more](https://openid.net/specs/openid-connect-core-1_0-final.html#HybridIDToken)`,
  c_hash: `Code hash value encoded in base64url format. [Learn more](https://openid.net/specs/openid-connect-core-1_0-final.html#HybridIDToken)`,
  s_hash: `State hash value encoded in base64url format. [Learn more](https://openid.net/specs/openid-financial-api-part-2-1_0.html#id-token-as-detached-signature)`,
  nonce: `Associates a Client session with an ID Token. [Learn more](https://openid.net/specs/openid-connect-core-1_0-final.html#IDToken)`,
  auth_time: `The time when the End-User authentication occurred. [Learn more](https://openid.net/specs/openid-connect-core-1_0-final.html#IDToken)`,
  amr: `Authentication methods used in the authentication. [Learn more](https://openid.net/specs/openid-connect-core-1_0-final.html#IDToken)`,
  acr: `Authentication Context Class. [Learn more](https://openid.net/specs/openid-connect-core-1_0-final.html#IDToken)`,
};

export const jwtClaimsTooltipDictionary: { [index: string]: string } = {
  exp: "Expiration time (seconds since Unix epoch)",
  nbf: "Not valid before (seconds since Unix epoch)",
  iat: "Issued at (seconds since Unix epoch)",
  iss: "Issuer (who created and signed this token)",
  sub: "Subject (whom the token refers to)",
  aud: "Audience (who or what the token is intended for)",
  jti: "JWT ID (unique identifier for this token)",
  typ: "Type of token",
  azp: "Authorized party (the party to which this token was issued)",
  alg: "Signature or encryption algorithm",
  jku: "JSON Web Key Set URL",
  jwk: "JSON Web Key Set (embedded)",
  kid: "Key ID",
  x5u: "X.509 Certificate URL",
  x5t: "X.509 Fingerprint (SHA-1)",
  "x5t#S256": "X.509 Fingerprint (SHA-256)",
  cty: "Content type",
  crit: "Extensions or claims that MUST be processed or verified",
  enc: "Encryption algorithm",
  zip: "Compression algorithm",
  kty: "Key type",
  use: 'Intended use of key: "sig" or "enc" (other values accepted)',
  key_ops: "Intended operations for this key",
  sid: "Session ID (String identifier for a Session)",
  updated_at: "Last modification timestamp",
  at_hash: "Access Token hash value",
  c_hash: "Authorization Code hash value",
  s_hash: "State hash value",
  nonce: "Unique value associating request to token",
  auth_time: "Time when authentication occurred",
  amr: "Authentication methods array",
  acr: "Authentication context class",
};
